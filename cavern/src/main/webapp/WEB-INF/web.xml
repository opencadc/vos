<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/j2ee/dtds/web-app_2_3.dtd">

<web-app>
    <display-name>cavern</display-name>
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    
    <context-param>
        <param-name>VOSpaceStylesheetReference</param-name>
        <param-value>/cavern/vospace.xsl</param-value>
    </context-param>

    <servlet>
        <servlet-name>logControl</servlet-name>
        <servlet-class>ca.nrc.cadc.log.LogControlServlet</servlet-class>
        <init-param>
            <param-name>logLevel</param-name>
            <param-value>info</param-value>
        </init-param>
        <init-param>
            <param-name>logLevelPackages</param-name>
            <param-value>
            org.opencadc.cavern
            org.opencadc.vospace
            org.opencadc.auth
            ca.nrc.cadc.reg
            org.opencadc.gms
            ca.nrc.cadc.db.version
            ca.nrc.cadc.rest
            ca.nrc.cadc.vosi
            ca.nrc.cadc.auth
            ca.nrc.cadc.uws
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
  
    <servlet>
        <servlet-name>NodesServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.rest.RestServlet</servlet-class>
        <init-param>
            <param-name>init</param-name>
            <param-value>org.opencadc.cavern.CavernInitAction</param-value>
        </init-param>
        <init-param>
            <param-name>get</param-name>
            <param-value>org.opencadc.vospace.server.actions.GetNodeAction</param-value>
        </init-param>
        <init-param>
            <param-name>put</param-name>
            <param-value>org.opencadc.vospace.server.actions.CreateNodeAction</param-value>
        </init-param>
        <init-param>
            <param-name>post</param-name>
            <param-value>org.opencadc.vospace.server.actions.UpdateNodeAction</param-value>
        </init-param>
        <init-param>
            <param-name>delete</param-name>
            <param-value>org.opencadc.vospace.server.actions.DeleteNodeAction</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    
    <!-- async transfer servlet-->
    <servlet>
        <servlet-name>TransferServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.uws.server.JobServlet</servlet-class>
        <init-param>
            <param-name>get</param-name>
            <param-value>ca.nrc.cadc.uws.web.GetAction</param-value>
        </init-param>
        <init-param>
            <param-name>post</param-name>
            <param-value>ca.nrc.cadc.uws.web.PostAction</param-value>
        </init-param>
        <init-param>
            <param-name>delete</param-name>
            <param-value>ca.nrc.cadc.uws.web.DeleteAction</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.uws.server.JobManager</param-name>
            <param-value>org.opencadc.cavern.uws.AsyncTransferManager</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.rest.InlineContentHandler</param-name>
            <param-value>org.opencadc.vospace.server.transfers.InlineTransferHandler</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!-- async recursive node property setting servlet-->
    <servlet>
        <servlet-name>RecursiveDeleteServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.uws.server.JobServlet</servlet-class>
        <init-param>
            <param-name>get</param-name>
            <param-value>ca.nrc.cadc.uws.web.GetAction</param-value>
        </init-param>
        <init-param>
            <param-name>post</param-name>
            <param-value>ca.nrc.cadc.uws.web.PostAction</param-value>
        </init-param>
        <init-param>
            <param-name>delete</param-name>
            <param-value>ca.nrc.cadc.uws.web.DeleteAction</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.uws.server.JobManager</param-name>
            <param-value>org.opencadc.cavern.uws.RecursiveDeleteJobManager</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!-- async recursive node property setting servlet-->
    <servlet>
        <servlet-name>RecursiveNodePropsServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.uws.server.JobServlet</servlet-class>
        <init-param>
            <param-name>get</param-name>
            <param-value>ca.nrc.cadc.uws.web.GetAction</param-value>
        </init-param>
        <init-param>
            <param-name>post</param-name>
            <param-value>ca.nrc.cadc.uws.web.PostAction</param-value>
        </init-param>
        <init-param>
            <param-name>delete</param-name>
            <param-value>ca.nrc.cadc.uws.web.DeleteAction</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.uws.server.JobManager</param-name>
            <param-value>org.opencadc.cavern.uws.RecursiveNodePropsJobManager</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.rest.InlineContentHandler</param-name>
            <param-value>org.opencadc.vospace.server.async.InlineNodeJobHandler</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>
    
    <!-- sync transfer servlet-->
    <servlet>
        <servlet-name>SyncTransferServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.uws.server.JobServlet</servlet-class>
        <init-param>
            <param-name>get</param-name>
            <param-value>ca.nrc.cadc.uws.web.SyncGetAction</param-value>
        </init-param>
        <init-param>
            <param-name>post</param-name>
            <param-value>ca.nrc.cadc.uws.web.SyncPostAction</param-value>
        </init-param>
        <init-param>
            <param-name>delete</param-name>
            <param-value>ca.nrc.cadc.uws.web.DeleteAction</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.uws.web.SyncPostAction.execOnPOST</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.uws.server.JobManager</param-name>
            <param-value>org.opencadc.cavern.uws.SyncTransferManager</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.rest.InlineContentHandler</param-name>
            <param-value>org.opencadc.vospace.server.transfers.InlineTransferHandler</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!-- internal servlet to assist async transfer servlet -->
    <servlet>
        <servlet-name>TransferDetailsServlet</servlet-name>
        <servlet-class>org.opencadc.vospace.server.transfers.TransferDetailsServlet</servlet-class>
        <init-param>
            <param-name>ca.nrc.cadc.uws.server.JobManager</param-name>
            <param-value>org.opencadc.cavern.uws.AsyncTransferManager</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>FilesServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.rest.RestServlet</servlet-class>
        <init-param>
            <param-name>head</param-name>
            <param-value>org.opencadc.cavern.files.HeadAction</param-value>
        </init-param>
        <init-param>
            <param-name>get</param-name>
            <param-value>org.opencadc.cavern.files.GetAction</param-value>
        </init-param>
        <init-param>
            <param-name>put</param-name>
            <param-value>org.opencadc.cavern.files.PutAction</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!-- VOspace PackageServlet -->
    <servlet>
        <servlet-name>PackageServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.uws.server.JobServlet</servlet-class>
        <init-param>
            <param-name>get</param-name>
            <param-value>ca.nrc.cadc.uws.web.SyncGetAction</param-value>
        </init-param>
        <init-param>
            <param-name>ca.nrc.cadc.uws.server.JobManager</param-name>
            <param-value>org.opencadc.cavern.uws.PackageJobManager</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!-- VOSpace ViewsServlet -->
    <servlet>
        <servlet-name>ViewsServlet</servlet-name>
        <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class>

        <init-param>
        <param-name>org.restlet.application</param-name>
        <param-value>ca.nrc.cadc.vos.server.web.restlet.ViewsApplication
        </param-value>
        </init-param>

        <load-on-startup>4</load-on-startup>
    </servlet>

    <!-- VOSI availability -->
    <servlet>
        <servlet-name>AvailabilityServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.vosi.AvailabilityServlet</servlet-class>
        <init-param>
            <param-name>ca.nrc.cadc.vosi.AvailabilityPlugin</param-name>
            <param-value>org.opencadc.cavern.ServiceAvailability</param-value>
        </init-param>
        <init-param>
            <param-name>availabilityProperties</param-name>
            <param-value>cadc-vosi.properties</param-value>
        </init-param>
        <load-on-startup>5</load-on-startup>
    </servlet>

    <!-- VOSI capabilities -->
    <servlet>
        <servlet-name>CapabilitiesServlet</servlet-name>
        <servlet-class>ca.nrc.cadc.rest.RestServlet</servlet-class>
        <init-param>
            <param-name>init</param-name>
            <param-value>ca.nrc.cadc.vosi.CapInitAction</param-value>
        </init-param>
        <init-param>
            <param-name>get</param-name>
            <param-value>ca.nrc.cadc.vosi.CapGetAction</param-value>
        </init-param>
        <init-param>
            <param-name>input</param-name>
            <param-value>/capabilities.xml</param-value>
        </init-param>
        <init-param>
            <param-name>head</param-name>
            <param-value>ca.nrc.cadc.vosi.CapHeadAction</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!-- the VOSpace Endpoints -->
    <servlet-mapping>
        <servlet-name>NodesServlet</servlet-name>
        <url-pattern>/nodes/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>ViewsServlet</servlet-name>
        <url-pattern>/views</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>FilesServlet</servlet-name>
        <url-pattern>/files/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>SyncTransferServlet</servlet-name>
        <url-pattern>/synctrans/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>TransferServlet</servlet-name>
        <url-pattern>/transfers/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>RecursiveNodePropsServlet</servlet-name>
        <url-pattern>/async-setprops/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>RecursiveDeleteServlet</servlet-name>
        <url-pattern>/async-delete/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>TransferDetailsServlet</servlet-name>
        <url-pattern>/xfer/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>PackageServlet</servlet-name>
        <url-pattern>/pkg/*</url-pattern>
    </servlet-mapping>

    <!-- Availability servlet endpoint -->
    <servlet-mapping>
        <servlet-name>AvailabilityServlet</servlet-name>
        <url-pattern>/availability</url-pattern>
    </servlet-mapping>

    <!-- Capability servlet endpoint -->
    <servlet-mapping>
        <servlet-name>CapabilitiesServlet</servlet-name>
        <url-pattern>/capabilities</url-pattern>
    </servlet-mapping>

    <!-- Log control servlet endpoint -->
    <servlet-mapping>
        <servlet-name>logControl</servlet-name>
        <url-pattern>/logControl</url-pattern>
    </servlet-mapping>
</web-app>
